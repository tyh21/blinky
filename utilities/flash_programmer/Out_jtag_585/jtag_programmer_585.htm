<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\Out_jtag_585\jtag_programmer_585.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\Out_jtag_585\jtag_programmer_585.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5060960: Last Updated: Fri Jan 07 10:43:06 2022
<BR><P>
<H3>Maximum Stack Usage =        392 bytes + Unknown(Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
main &rArr; spi_flash_is_empty &rArr; spi_flash_is_sector_empty &rArr; spi_flash_is_page_empty &rArr; spi_flash_read_data &rArr; spi_flash_is_busy &rArr; spi_flash_read_status_reg &rArr; spi_transaction &rArr; spi_cs_low
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[c]">ADC_Handler</a> from startup_da14585_586.o(.text) referenced from startup_da14585_586.o(RESET)
 <LI><a href="#[e]">BLE_RF_DIAG_Handler</a> from startup_da14585_586.o(.text) referenced from startup_da14585_586.o(RESET)
 <LI><a href="#[6]">BLE_WAKEUP_LP_Handler</a> from startup_da14585_586.o(.text) referenced from startup_da14585_586.o(RESET)
 <LI><a href="#[1a]">DMA_Handler</a> from startup_da14585_586.o(.text) referenced from startup_da14585_586.o(RESET)
 <LI><a href="#[10]">GPIO0_Handler</a> from gpio.o(.text) referenced from startup_da14585_586.o(RESET)
 <LI><a href="#[11]">GPIO1_Handler</a> from gpio.o(.text) referenced from startup_da14585_586.o(RESET)
 <LI><a href="#[12]">GPIO2_Handler</a> from gpio.o(.text) referenced from startup_da14585_586.o(RESET)
 <LI><a href="#[13]">GPIO3_Handler</a> from gpio.o(.text) referenced from startup_da14585_586.o(RESET)
 <LI><a href="#[14]">GPIO4_Handler</a> from gpio.o(.text) referenced from startup_da14585_586.o(RESET)
 <LI><a href="#[2]">HardFault_Handler</a> from startup_da14585_586.o(.text) referenced from startup_da14585_586.o(RESET)
 <LI><a href="#[22]">HardFault_HandlerC</a> from hardfault_handler.o(.text) referenced from startup_da14585_586.o(.text)
 <LI><a href="#[a]">I2C_Handler</a> from i2c.o(.text) referenced from startup_da14585_586.o(RESET)
 <LI><a href="#[d]">KEYBRD_Handler</a> from startup_da14585_586.o(.text) referenced from startup_da14585_586.o(RESET)
 <LI><a href="#[1]">NMI_Handler</a> from startup_da14585_586.o(.text) referenced from startup_da14585_586.o(RESET)
 <LI><a href="#[21]">NMI_HandlerC</a> from nmi_handler.o(.text) referenced from startup_da14585_586.o(.text)
 <LI><a href="#[17]">PCM_Handler</a> from startup_da14585_586.o(.text) referenced from startup_da14585_586.o(RESET)
 <LI><a href="#[4]">PendSV_Handler</a> from startup_da14585_586.o(.text) referenced from startup_da14585_586.o(RESET)
 <LI><a href="#[1b]">RESERVED21_Handler</a> from startup_da14585_586.o(.text) referenced from startup_da14585_586.o(RESET)
 <LI><a href="#[1c]">RESERVED22_Handler</a> from startup_da14585_586.o(.text) referenced from startup_da14585_586.o(RESET)
 <LI><a href="#[1d]">RESERVED23_Handler</a> from startup_da14585_586.o(.text) referenced from startup_da14585_586.o(RESET)
 <LI><a href="#[f]">RFCAL_Handler</a> from startup_da14585_586.o(.text) referenced from startup_da14585_586.o(RESET)
 <LI><a href="#[0]">Reset_Handler</a> from startup_da14585_586.o(.text) referenced from startup_da14585_586.o(RESET)
 <LI><a href="#[b]">SPI_Handler</a> from startup_da14585_586.o(.text) referenced from startup_da14585_586.o(RESET)
 <LI><a href="#[18]">SRCIN_Handler</a> from startup_da14585_586.o(.text) referenced from startup_da14585_586.o(RESET)
 <LI><a href="#[19]">SRCOUT_Handler</a> from startup_da14585_586.o(.text) referenced from startup_da14585_586.o(RESET)
 <LI><a href="#[3]">SVC_Handler</a> from startup_da14585_586.o(.text) referenced from startup_da14585_586.o(RESET)
 <LI><a href="#[15]">SWTIM_Handler</a> from timer0.o(.text) referenced from startup_da14585_586.o(RESET)
 <LI><a href="#[5]">SysTick_Handler</a> from startup_da14585_586.o(.text) referenced from startup_da14585_586.o(RESET)
 <LI><a href="#[1f]">SystemInit</a> from system_da14585_586.o(.text) referenced from startup_da14585_586.o(.text)
 <LI><a href="#[9]">UART2_Handler</a> from uart.o(.text) referenced from startup_da14585_586.o(RESET)
 <LI><a href="#[8]">UART_Handler</a> from uart.o(.text) referenced from startup_da14585_586.o(RESET)
 <LI><a href="#[16]">WKUP_QUADEC_Handler</a> from startup_da14585_586.o(.text) referenced from startup_da14585_586.o(RESET)
 <LI><a href="#[20]">__main</a> from entry.o(.ARM.Collect$$$$00000000) referenced from startup_da14585_586.o(.text)
 <LI><a href="#[1e]">main</a> from programmer.o(.text) referenced from entry9a.o(.ARM.Collect$$$$0000000B)
 <LI><a href="#[7]">rwble_isr</a> from startup_da14585_586.o(.text) referenced from startup_da14585_586.o(RESET)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[20]"></a>__main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry.o(.ARM.Collect$$$$00000000))
<BR>[Address Reference Count : 1]<UL><LI> startup_da14585_586.o(.text)
</UL>
<P><STRONG><a name="[a0]"></a>_main_stk</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry2.o(.ARM.Collect$$$$00000001))

<P><STRONG><a name="[23]"></a>_main_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[7f]"></a>__main_after_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Called By]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[a1]"></a>_main_clock</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry7b.o(.ARM.Collect$$$$00000008))

<P><STRONG><a name="[a2]"></a>_main_cpp_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry8b.o(.ARM.Collect$$$$0000000A))

<P><STRONG><a name="[a3]"></a>_main_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry9a.o(.ARM.Collect$$$$0000000B))

<P><STRONG><a name="[25]"></a>__rt_lib_shutdown_fini</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry12b.o(.ARM.Collect$$$$0000000E))
<BR><BR>[Calls]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__arm_fini_ (Weak Reference)
</UL>

<P><STRONG><a name="[a4]"></a>__rt_final_cpp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry10a.o(.ARM.Collect$$$$0000000F))

<P><STRONG><a name="[a5]"></a>__rt_final_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry11a.o(.ARM.Collect$$$$00000011))

<P><STRONG><a name="[0]"></a>Reset_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_da14585_586.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_da14585_586.o(RESET)
</UL>
<P><STRONG><a name="[3]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_da14585_586.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_da14585_586.o(RESET)
</UL>
<P><STRONG><a name="[4]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_da14585_586.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_da14585_586.o(RESET)
</UL>
<P><STRONG><a name="[5]"></a>SysTick_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_da14585_586.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_da14585_586.o(RESET)
</UL>
<P><STRONG><a name="[c]"></a>ADC_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_da14585_586.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_da14585_586.o(RESET)
</UL>
<P><STRONG><a name="[e]"></a>BLE_RF_DIAG_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_da14585_586.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_da14585_586.o(RESET)
</UL>
<P><STRONG><a name="[6]"></a>BLE_WAKEUP_LP_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_da14585_586.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_da14585_586.o(RESET)
</UL>
<P><STRONG><a name="[1a]"></a>DMA_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_da14585_586.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_da14585_586.o(RESET)
</UL>
<P><STRONG><a name="[d]"></a>KEYBRD_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_da14585_586.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_da14585_586.o(RESET)
</UL>
<P><STRONG><a name="[17]"></a>PCM_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_da14585_586.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_da14585_586.o(RESET)
</UL>
<P><STRONG><a name="[1b]"></a>RESERVED21_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_da14585_586.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_da14585_586.o(RESET)
</UL>
<P><STRONG><a name="[1c]"></a>RESERVED22_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_da14585_586.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_da14585_586.o(RESET)
</UL>
<P><STRONG><a name="[1d]"></a>RESERVED23_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_da14585_586.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_da14585_586.o(RESET)
</UL>
<P><STRONG><a name="[f]"></a>RFCAL_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_da14585_586.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_da14585_586.o(RESET)
</UL>
<P><STRONG><a name="[b]"></a>SPI_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_da14585_586.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_da14585_586.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>SRCIN_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_da14585_586.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_da14585_586.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>SRCOUT_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_da14585_586.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_da14585_586.o(RESET)
</UL>
<P><STRONG><a name="[16]"></a>WKUP_QUADEC_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_da14585_586.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_da14585_586.o(RESET)
</UL>
<P><STRONG><a name="[7]"></a>rwble_isr</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_da14585_586.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_da14585_586.o(RESET)
</UL>
<P><STRONG><a name="[1f]"></a>SystemInit</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, system_da14585_586.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SystemInit
</UL>
<BR>[Calls]<UL><LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_DisableIRQ
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_da14585_586.o(.text)
</UL>
<P><STRONG><a name="[22]"></a>HardFault_HandlerC</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hardfault_handler.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_da14585_586.o(.text)
</UL>
<P><STRONG><a name="[21]"></a>NMI_HandlerC</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, nmi_handler.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_da14585_586.o(.text)
</UL>
<P><STRONG><a name="[28]"></a>init_i2c_pads</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, peripherals.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = init_i2c_pads
</UL>
<BR>[Calls]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Called By]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;periph_init
</UL>

<P><STRONG><a name="[2a]"></a>init_spi_pads</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, peripherals.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = init_spi_pads
</UL>
<BR>[Calls]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Called By]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;periph_init
</UL>

<P><STRONG><a name="[2b]"></a>periph_init</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, peripherals.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = periph_init &rArr; init_spi_pads
</UL>
<BR>[Calls]<UL><LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_spi_pads
<LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_i2c_pads
</UL>
<BR>[Called By]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_init
</UL>

<P><STRONG><a name="[2c]"></a>set_pad_spi</STRONG> (Thumb, 72 bytes, Stack size 24 bytes, peripherals.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = set_pad_spi &rArr; GPIO_ConfigurePin &rArr; GPIO_SetPinFunction
</UL>
<BR>[Calls]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ConfigurePin
</UL>
<BR>[Called By]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[65]"></a>update_spi_pads</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, peripherals.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[2e]"></a>set_pad_eeprom</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, peripherals.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = set_pad_eeprom &rArr; GPIO_ConfigurePin &rArr; GPIO_SetPinFunction
</UL>
<BR>[Calls]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ConfigurePin
</UL>
<BR>[Called By]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[66]"></a>update_eeprom_pads</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, peripherals.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[2f]"></a>i2c_eeprom_configure</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, i2c_eeprom.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = i2c_eeprom_configure
</UL>
<BR>[Calls]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[31]"></a>i2c_eeprom_initialize</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, i2c_eeprom.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = i2c_eeprom_initialize &rArr; i2c_init &rArr; i2c_setup_master
</UL>
<BR>[Calls]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_init
</UL>
<BR>[Called By]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[36]"></a>i2c_wait_until_eeprom_ready</STRONG> (Thumb, 62 bytes, Stack size 20 bytes, i2c_eeprom.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = i2c_wait_until_eeprom_ready
</UL>
<BR>[Called By]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_eeprom_write_page
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_eeprom_read_data
</UL>

<P><STRONG><a name="[35]"></a>i2c_eeprom_read_data</STRONG> (Thumb, 78 bytes, Stack size 32 bytes, i2c_eeprom.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = i2c_eeprom_read_data &rArr; read_data_single &rArr; i2c_eeprom_send_address
</UL>
<BR>[Calls]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_wait_until_eeprom_ready
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_data_single
</UL>
<BR>[Called By]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[37]"></a>i2c_eeprom_write_page</STRONG> (Thumb, 142 bytes, Stack size 40 bytes, i2c_eeprom.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = i2c_eeprom_write_page &rArr; i2c_wait_until_eeprom_ready
</UL>
<BR>[Calls]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_wait_until_eeprom_ready
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_eeprom_send_address
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_eeprom_write_data
</UL>

<P><STRONG><a name="[39]"></a>i2c_eeprom_write_data</STRONG> (Thumb, 80 bytes, Stack size 24 bytes, i2c_eeprom.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = i2c_eeprom_write_data &rArr; i2c_eeprom_write_page &rArr; i2c_wait_until_eeprom_ready
</UL>
<BR>[Calls]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_eeprom_write_page
</UL>
<BR>[Called By]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[3a]"></a>spi_flash_read_status_reg</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, spi_flash.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = spi_flash_read_status_reg &rArr; spi_transaction &rArr; spi_cs_low
</UL>
<BR>[Calls]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_transaction
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_set_bitmode
</UL>
<BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_configure_memory_protection
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_wait_till_ready
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_is_busy
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_write_enable
</UL>

<P><STRONG><a name="[3d]"></a>spi_flash_is_busy</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, spi_flash.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = spi_flash_is_busy &rArr; spi_flash_read_status_reg &rArr; spi_transaction &rArr; spi_cs_low
</UL>
<BR>[Calls]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_read_status_reg
</UL>
<BR>[Called By]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_read_data
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_page_program
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_chip_erase
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_block_erase
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_configure_memory_protection
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_write_status_reg
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_read_jedec_id
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_write_enable
</UL>

<P><STRONG><a name="[3e]"></a>spi_flash_wait_till_ready</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, spi_flash.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = spi_flash_wait_till_ready &rArr; spi_flash_read_status_reg &rArr; spi_transaction &rArr; spi_cs_low
</UL>
<BR>[Calls]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_read_status_reg
</UL>
<BR>[Called By]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_page_program
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_chip_erase
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_block_erase
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_write_status_reg
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_write_enable
</UL>

<P><STRONG><a name="[3f]"></a>spi_flash_release_from_power_down</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, spi_flash.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = spi_flash_release_from_power_down &rArr; spi_transaction &rArr; spi_cs_low
</UL>
<BR>[Calls]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_transaction
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_set_bitmode
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_cs_low
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_cs_high
</UL>
<BR>[Called By]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_peripheral_init
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_enable_with_autodetect
</UL>

<P><STRONG><a name="[46]"></a>spi_flash_configure_env</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, spi_flash.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_peripheral_init
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_auto_detect
</UL>

<P><STRONG><a name="[42]"></a>spi_flash_read_jedec_id</STRONG> (Thumb, 76 bytes, Stack size 8 bytes, spi_flash.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = spi_flash_read_jedec_id &rArr; spi_flash_is_busy &rArr; spi_flash_read_status_reg &rArr; spi_transaction &rArr; spi_cs_low
</UL>
<BR>[Calls]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_set_bitmode
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_cs_low
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_cs_high
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_access
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_is_busy
</UL>
<BR>[Called By]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_peripheral_init
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_auto_detect
</UL>

<P><STRONG><a name="[44]"></a>spi_flash_auto_detect</STRONG> (Thumb, 94 bytes, Stack size 120 bytes, spi_flash.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = spi_flash_auto_detect &rArr; spi_flash_read_jedec_id &rArr; spi_flash_is_busy &rArr; spi_flash_read_status_reg &rArr; spi_transaction &rArr; spi_cs_low
</UL>
<BR>[Calls]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_read_jedec_id
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_configure_env
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_enable_with_autodetect
</UL>

<P><STRONG><a name="[47]"></a>spi_flash_enable_with_autodetect</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, spi_flash.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = spi_flash_enable_with_autodetect &rArr; spi_flash_auto_detect &rArr; spi_flash_read_jedec_id &rArr; spi_flash_is_busy &rArr; spi_flash_read_status_reg &rArr; spi_transaction &rArr; spi_cs_low
</UL>
<BR>[Calls]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_initialize
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_auto_detect
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_release_from_power_down
</UL>
<BR>[Called By]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_peripheral_init
</UL>

<P><STRONG><a name="[4a]"></a>spi_flash_write_status_reg</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, spi_flash.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = spi_flash_write_status_reg &rArr; spi_flash_wait_till_ready &rArr; spi_flash_read_status_reg &rArr; spi_transaction &rArr; spi_cs_low
</UL>
<BR>[Calls]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_transaction
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_set_bitmode
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_wait_till_ready
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_is_busy
</UL>
<BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_configure_memory_protection
</UL>

<P><STRONG><a name="[4b]"></a>spi_flash_configure_memory_protection</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, spi_flash.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = spi_flash_configure_memory_protection &rArr; spi_flash_write_status_reg &rArr; spi_flash_wait_till_ready &rArr; spi_flash_read_status_reg &rArr; spi_transaction &rArr; spi_cs_low
</UL>
<BR>[Calls]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_write_status_reg
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_is_busy
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_read_status_reg
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_write_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[4c]"></a>spi_flash_block_erase</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, spi_flash.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = spi_flash_block_erase &rArr; spi_flash_write_enable &rArr; spi_flash_wait_till_ready &rArr; spi_flash_read_status_reg &rArr; spi_transaction &rArr; spi_cs_low
</UL>
<BR>[Calls]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_transaction
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_set_bitmode
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_wait_till_ready
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_is_busy
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_write_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[4d]"></a>spi_flash_chip_erase</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, spi_flash.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = spi_flash_chip_erase &rArr; spi_flash_write_enable &rArr; spi_flash_wait_till_ready &rArr; spi_flash_read_status_reg &rArr; spi_transaction &rArr; spi_cs_low
</UL>
<BR>[Calls]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_transaction
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_set_bitmode
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_wait_till_ready
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_is_busy
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_write_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[4e]"></a>spi_flash_page_program</STRONG> (Thumb, 92 bytes, Stack size 16 bytes, spi_flash.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = spi_flash_page_program &rArr; spi_flash_write_enable &rArr; spi_flash_wait_till_ready &rArr; spi_flash_read_status_reg &rArr; spi_transaction &rArr; spi_cs_low
</UL>
<BR>[Calls]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_set_bitmode
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_cs_low
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_cs_high
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_access
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_wait_till_ready
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_is_busy
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_write_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_write_data
</UL>

<P><STRONG><a name="[4f]"></a>spi_flash_write_data</STRONG> (Thumb, 102 bytes, Stack size 48 bytes, spi_flash.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = spi_flash_write_data &rArr; spi_flash_page_program &rArr; spi_flash_write_enable &rArr; spi_flash_wait_till_ready &rArr; spi_flash_read_status_reg &rArr; spi_transaction &rArr; spi_cs_low
</UL>
<BR>[Calls]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_set_bitmode
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_page_program
</UL>
<BR>[Called By]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[50]"></a>spi_flash_read_data</STRONG> (Thumb, 94 bytes, Stack size 24 bytes, spi_flash.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = spi_flash_read_data &rArr; spi_flash_is_busy &rArr; spi_flash_read_status_reg &rArr; spi_transaction &rArr; spi_cs_low
</UL>
<BR>[Calls]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_set_bitmode
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_cs_low
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_cs_high
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_access
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_is_busy
</UL>
<BR>[Called By]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_is_page_empty
</UL>

<P><STRONG><a name="[51]"></a>spi_flash_is_page_empty</STRONG> (Thumb, 68 bytes, Stack size 272 bytes, spi_flash.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 328<LI>Call Chain = spi_flash_is_page_empty &rArr; spi_flash_read_data &rArr; spi_flash_is_busy &rArr; spi_flash_read_status_reg &rArr; spi_transaction &rArr; spi_cs_low
</UL>
<BR>[Calls]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_read_data
</UL>
<BR>[Called By]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_is_sector_empty
</UL>

<P><STRONG><a name="[52]"></a>spi_flash_is_sector_empty</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, spi_flash.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 344<LI>Call Chain = spi_flash_is_sector_empty &rArr; spi_flash_is_page_empty &rArr; spi_flash_read_data &rArr; spi_flash_is_busy &rArr; spi_flash_read_status_reg &rArr; spi_transaction &rArr; spi_cs_low
</UL>
<BR>[Calls]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_is_page_empty
</UL>
<BR>[Called By]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_is_empty
</UL>

<P><STRONG><a name="[53]"></a>spi_flash_is_empty</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, spi_flash.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 360<LI>Call Chain = spi_flash_is_empty &rArr; spi_flash_is_sector_empty &rArr; spi_flash_is_page_empty &rArr; spi_flash_read_data &rArr; spi_flash_is_busy &rArr; spi_flash_read_status_reg &rArr; spi_transaction &rArr; spi_cs_low
</UL>
<BR>[Calls]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_is_sector_empty
</UL>
<BR>[Called By]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[7b]"></a>GPIO_init</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, gpio.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_init
</UL>

<P><STRONG><a name="[56]"></a>GPIO_SetPinFunction</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, gpio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GPIO_SetPinFunction
</UL>
<BR>[Called By]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ConfigurePin
</UL>

<P><STRONG><a name="[55]"></a>GPIO_SetInactive</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, gpio.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_cs_low
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ConfigurePin
</UL>

<P><STRONG><a name="[54]"></a>GPIO_SetActive</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, gpio.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_cs_high
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ConfigurePin
</UL>

<P><STRONG><a name="[2d]"></a>GPIO_ConfigurePin</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, gpio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GPIO_ConfigurePin &rArr; GPIO_SetPinFunction
</UL>
<BR>[Calls]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetActive
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetInactive
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetPinFunction
</UL>
<BR>[Called By]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_wd_timer0_start
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_pad_eeprom
<LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_pad_spi
</UL>

<P><STRONG><a name="[5b]"></a>GPIO_ConfigurePinPower</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, gpio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GPIO_ConfigurePinPower
</UL>
<BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_wd_timer0_start
</UL>

<P><STRONG><a name="[61]"></a>GPIO_is_valid</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, gpio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GPIO_is_valid
</UL>
<BR>[Called By]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_wd_cmd
</UL>

<P><STRONG><a name="[57]"></a>GPIO_ResetIRQ</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, gpio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GPIO_ResetIRQ
</UL>
<BR>[Calls]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpioshift16
</UL>
<BR>[Called By]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOn_Handler
</UL>

<P><STRONG><a name="[59]"></a>GPIOn_Handler</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, gpio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GPIOn_Handler &rArr; GPIO_ResetIRQ
</UL>
<BR>[Calls]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetIRQ
</UL>
<BR>[Called By]<UL><LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO4_Handler
<LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO3_Handler
<LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO2_Handler
<LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO1_Handler
<LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO0_Handler
</UL>

<P><STRONG><a name="[10]"></a>GPIO0_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gpio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GPIO0_Handler &rArr; GPIOn_Handler &rArr; GPIO_ResetIRQ
</UL>
<BR>[Calls]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOn_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_da14585_586.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>GPIO1_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gpio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GPIO1_Handler &rArr; GPIOn_Handler &rArr; GPIO_ResetIRQ
</UL>
<BR>[Calls]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOn_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_da14585_586.o(RESET)
</UL>
<P><STRONG><a name="[12]"></a>GPIO2_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gpio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GPIO2_Handler &rArr; GPIOn_Handler &rArr; GPIO_ResetIRQ
</UL>
<BR>[Calls]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOn_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_da14585_586.o(RESET)
</UL>
<P><STRONG><a name="[13]"></a>GPIO3_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gpio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GPIO3_Handler &rArr; GPIOn_Handler &rArr; GPIO_ResetIRQ
</UL>
<BR>[Calls]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOn_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_da14585_586.o(RESET)
</UL>
<P><STRONG><a name="[14]"></a>GPIO4_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gpio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GPIO4_Handler &rArr; GPIOn_Handler &rArr; GPIO_ResetIRQ
</UL>
<BR>[Calls]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOn_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_da14585_586.o(RESET)
</UL>
<P><STRONG><a name="[5a]"></a>gpio_wd_timer0_start</STRONG> (Thumb, 118 bytes, Stack size 16 bytes, programmer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = gpio_wd_timer0_start &rArr; GPIO_ConfigurePin &rArr; GPIO_SetPinFunction
</UL>
<BR>[Calls]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer0_stop
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer0_start
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer0_set
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer0_init
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ConfigurePinPower
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ConfigurePin
</UL>
<BR>[Called By]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_wd_cmd
</UL>

<P><STRONG><a name="[60]"></a>gpio_wd_cmd</STRONG> (Thumb, 60 bytes, Stack size 24 bytes, programmer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = gpio_wd_cmd &rArr; gpio_wd_timer0_start &rArr; GPIO_ConfigurePin &rArr; GPIO_SetPinFunction
</UL>
<BR>[Calls]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_wd_timer0_start
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_is_valid
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[6b]"></a>response_action</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, programmer.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[69]"></a>response_cfg_action_result</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, programmer.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[6a]"></a>response_erase_action_result</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, programmer.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[6c]"></a>response_read_action_result</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, programmer.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[68]"></a>response_action_error</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, programmer.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[72]"></a>response_write_action_result</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, programmer.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[6d]"></a>response_id_action_result</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, programmer.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[1e]"></a>main</STRONG> (Thumb, 1396 bytes, Stack size 32 bytes, programmer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 392<LI>Call Chain = main &rArr; spi_flash_is_empty &rArr; spi_flash_is_sector_empty &rArr; spi_flash_is_page_empty &rArr; spi_flash_read_data &rArr; spi_flash_is_busy &rArr; spi_flash_read_status_reg &rArr; spi_transaction &rArr; spi_cs_low
</UL>
<BR>[Calls]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_init
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hw_otpc_manual_read_on
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hw_otpc_fifo_prog
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hw_otpc_disable
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;response_id_action_result
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;response_write_action_result
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;response_action_error
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;response_read_action_result
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;response_erase_action_result
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;response_cfg_action_result
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;response_action
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_wd_cmd
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_peripheral_init
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hw_otpc_init
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_is_valid
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetPinFunction
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_is_empty
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_is_sector_empty
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_read_data
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_write_data
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_chip_erase
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_block_erase
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_configure_memory_protection
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_read_jedec_id
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_eeprom_write_data
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_eeprom_read_data
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_eeprom_initialize
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_eeprom_configure
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ConfigurePin
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_eeprom_pads
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_pad_eeprom
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_spi_pads
<LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_pad_spi
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P><STRONG><a name="[70]"></a>hw_otpc_disable</STRONG> (Thumb, 72 bytes, Stack size 12 bytes, hw_otpc_58x.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = hw_otpc_disable
</UL>
<BR>[Called By]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_init
<LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[6f]"></a>hw_otpc_manual_read_on</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, hw_otpc_58x.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_init
<LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[71]"></a>hw_otpc_fifo_prog</STRONG> (Thumb, 86 bytes, Stack size 16 bytes, hw_otpc_58x.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = hw_otpc_fifo_prog
</UL>
<BR>[Calls]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wait_for_auto_done
</UL>
<BR>[Called By]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[74]"></a>spi_enable</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, spi_58x.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_initialize
</UL>

<P><STRONG><a name="[41]"></a>spi_cs_high</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, spi_58x.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = spi_cs_high
</UL>
<BR>[Calls]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetActive
</UL>
<BR>[Called By]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_transaction
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_initialize
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_read_data
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_page_program
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_read_jedec_id
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_release_from_power_down
</UL>

<P><STRONG><a name="[3b]"></a>spi_set_bitmode</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, spi_58x.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_read_data
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_write_data
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_page_program
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_chip_erase
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_block_erase
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_write_status_reg
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_read_jedec_id
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_release_from_power_down
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_read_status_reg
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_write_enable
</UL>

<P><STRONG><a name="[48]"></a>spi_initialize</STRONG> (Thumb, 84 bytes, Stack size 8 bytes, spi_58x.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = spi_initialize &rArr; spi_cs_high
</UL>
<BR>[Calls]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_cs_high
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_peripheral_init
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_enable_with_autodetect
</UL>

<P><STRONG><a name="[40]"></a>spi_cs_low</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, spi_58x.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = spi_cs_low
</UL>
<BR>[Calls]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetInactive
</UL>
<BR>[Called By]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_transaction
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_read_data
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_page_program
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_read_jedec_id
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_release_from_power_down
</UL>

<P><STRONG><a name="[43]"></a>spi_access</STRONG> (Thumb, 60 bytes, Stack size 0 bytes, spi_58x.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_transaction
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_read_data
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_page_program
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_read_jedec_id
</UL>

<P><STRONG><a name="[3c]"></a>spi_transaction</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, spi_58x.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = spi_transaction &rArr; spi_cs_low
</UL>
<BR>[Calls]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_cs_low
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_cs_high
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_access
</UL>
<BR>[Called By]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_chip_erase
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_block_erase
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_write_status_reg
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_release_from_power_down
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_read_status_reg
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_write_enable
</UL>

<P><STRONG><a name="[75]"></a>i2c_setup_slave</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, i2c.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = i2c_setup_slave
</UL>
<BR>[Called By]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_init
</UL>

<P><STRONG><a name="[76]"></a>i2c_setup_master</STRONG> (Thumb, 68 bytes, Stack size 12 bytes, i2c.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = i2c_setup_master
</UL>
<BR>[Called By]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_init
</UL>

<P><STRONG><a name="[32]"></a>i2c_init</STRONG> (Thumb, 190 bytes, Stack size 12 bytes, i2c.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = i2c_init &rArr; i2c_setup_master
</UL>
<BR>[Calls]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_setup_master
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_setup_slave
</UL>
<BR>[Called By]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_eeprom_initialize
</UL>

<P><STRONG><a name="[a]"></a>I2C_Handler</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, i2c.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = I2C_Handler
</UL>
<BR>[Calls]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_ClearPendingIRQ
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_da14585_586.o(RESET)
</UL>
<P><STRONG><a name="[8]"></a>UART_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, uart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = UART_Handler &rArr; uart_intr_hndl &rArr; uart_tx_isr
</UL>
<BR>[Calls]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_intr_hndl
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_da14585_586.o(RESET)
</UL>
<P><STRONG><a name="[9]"></a>UART2_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, uart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = UART2_Handler &rArr; uart_intr_hndl &rArr; uart_tx_isr
</UL>
<BR>[Calls]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_intr_hndl
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_da14585_586.o(RESET)
</UL>
<P><STRONG><a name="[5d]"></a>timer0_init</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, timer0.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_wd_timer0_start
</UL>

<P><STRONG><a name="[5f]"></a>timer0_start</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, timer0.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_wd_timer0_start
</UL>

<P><STRONG><a name="[5c]"></a>timer0_stop</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, timer0.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_wd_timer0_start
</UL>

<P><STRONG><a name="[5e]"></a>timer0_set</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, timer0.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_wd_timer0_start
</UL>

<P><STRONG><a name="[15]"></a>SWTIM_Handler</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, timer0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_da14585_586.o(RESET)
</UL>
<P><STRONG><a name="[63]"></a>system_init</STRONG> (Thumb, 158 bytes, Stack size 16 bytes, arch_system.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = system_init &rArr; periph_init &rArr; init_spi_pads
</UL>
<BR>[Calls]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hw_otpc_manual_read_on
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hw_otpc_disable
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_init
<LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;periph_init
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;reset_indication (Weak Reference)
</UL>
<BR>[Called By]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[a6]"></a>__aeabi_uidiv</STRONG> (Thumb, 0 bytes, Stack size 12 bytes, uidiv.o(.text), UNUSED)

<P><STRONG><a name="[38]"></a>__aeabi_uidivmod</STRONG> (Thumb, 44 bytes, Stack size 12 bytes, uidiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = __aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_wd_cmd
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_eeprom_write_page
</UL>

<P><STRONG><a name="[30]"></a>__aeabi_memcpy</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, memcpya.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_eeprom_configure
</UL>

<P><STRONG><a name="[45]"></a>__aeabi_memcpy4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memcpya.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_auto_detect
</UL>

<P><STRONG><a name="[a7]"></a>__aeabi_memcpy8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memcpya.o(.text), UNUSED)

<P><STRONG><a name="[7d]"></a>__aeabi_memset</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset$wrapper
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>

<P><STRONG><a name="[a8]"></a>__aeabi_memset4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[a9]"></a>__aeabi_memset8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[29]"></a>__aeabi_memclr</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>
<BR>[Called By]<UL><LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_spi_pads
<LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_i2c_pads
</UL>

<P><STRONG><a name="[64]"></a>__aeabi_memclr4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[aa]"></a>__aeabi_memclr8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[7e]"></a>_memset$wrapper</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, memseta.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>

<P><STRONG><a name="[67]"></a>__aeabi_uread4</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, uread4.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[ab]"></a>__rt_uread4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, uread4.o(.text), UNUSED)

<P><STRONG><a name="[ac]"></a>_uread4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, uread4.o(.text), UNUSED)

<P><STRONG><a name="[24]"></a>__scatterload</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main_after_scatterload
</UL>
<BR>[Called By]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_scatterload
</UL>

<P><STRONG><a name="[ad]"></a>__scatterload_rt2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, init.o(.text), UNUSED)

<P><STRONG><a name="[ae]"></a>__scatterload_copy</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_copy), UNUSED)

<P><STRONG><a name="[af]"></a>__scatterload_null</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_null), UNUSED)

<P><STRONG><a name="[b0]"></a>__scatterload_zeroinit</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_zeroinit), UNUSED)
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[1]"></a>NMI_Handler</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, startup_da14585_586.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_da14585_586.o(RESET)
</UL>
<P><STRONG><a name="[2]"></a>HardFault_Handler</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, startup_da14585_586.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_da14585_586.o(RESET)
</UL>
<P><STRONG><a name="[27]"></a>__NVIC_DisableIRQ</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, system_da14585_586.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
</UL>

<P><STRONG><a name="[34]"></a>i2c_eeprom_send_address</STRONG> (Thumb, 86 bytes, Stack size 12 bytes, i2c_eeprom.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = i2c_eeprom_send_address
</UL>
<BR>[Called By]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_eeprom_write_page
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_data_single
</UL>

<P><STRONG><a name="[33]"></a>read_data_single</STRONG> (Thumb, 128 bytes, Stack size 24 bytes, i2c_eeprom.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = read_data_single &rArr; i2c_eeprom_send_address
</UL>
<BR>[Calls]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_eeprom_send_address
</UL>
<BR>[Called By]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_eeprom_read_data
</UL>

<P><STRONG><a name="[49]"></a>spi_flash_write_enable</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, spi_flash.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = spi_flash_write_enable &rArr; spi_flash_wait_till_ready &rArr; spi_flash_read_status_reg &rArr; spi_transaction &rArr; spi_cs_low
</UL>
<BR>[Calls]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_transaction
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_set_bitmode
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_wait_till_ready
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_is_busy
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_read_status_reg
</UL>
<BR>[Called By]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_page_program
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_chip_erase
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_block_erase
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_configure_memory_protection
</UL>

<P><STRONG><a name="[58]"></a>gpioshift16</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, gpio.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetIRQ
</UL>

<P><STRONG><a name="[6e]"></a>hw_otpc_init</STRONG> (Thumb, 60 bytes, Stack size 12 bytes, programmer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = hw_otpc_init
</UL>
<BR>[Called By]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[62]"></a>spi_flash_peripheral_init</STRONG> (Thumb, 122 bytes, Stack size 40 bytes, programmer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = spi_flash_peripheral_init &rArr; spi_flash_enable_with_autodetect &rArr; spi_flash_auto_detect &rArr; spi_flash_read_jedec_id &rArr; spi_flash_is_busy &rArr; spi_flash_read_status_reg &rArr; spi_transaction &rArr; spi_cs_low
</UL>
<BR>[Calls]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_initialize
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_enable_with_autodetect
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_read_jedec_id
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_configure_env
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_release_from_power_down
</UL>
<BR>[Called By]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[73]"></a>wait_for_auto_done</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, hw_otpc_58x.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hw_otpc_fifo_prog
</UL>

<P><STRONG><a name="[77]"></a>__NVIC_ClearPendingIRQ</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, i2c.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Handler
</UL>

<P><STRONG><a name="[79]"></a>uart_rx_isr</STRONG> (Thumb, 72 bytes, Stack size 8 bytes, uart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = uart_rx_isr
</UL>
<BR>[Called By]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_intr_hndl
</UL>

<P><STRONG><a name="[78]"></a>uart_intr_hndl</STRONG> (Thumb, 156 bytes, Stack size 24 bytes, uart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = uart_intr_hndl &rArr; uart_tx_isr
</UL>
<BR>[Calls]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_tx_isr
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_rx_isr
</UL>
<BR>[Called By]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART2_Handler
<LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Handler
</UL>

<P><STRONG><a name="[7a]"></a>uart_tx_isr</STRONG> (Thumb, 100 bytes, Stack size 8 bytes, uart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = uart_tx_isr
</UL>
<BR>[Called By]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_intr_hndl
</UL>
<P>
<H3>
Undefined Global Symbols
</H3>
<P><STRONG><a name="[26]"></a>__arm_fini_</STRONG> (Unknown, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_shutdown_fini
</UL>

<P><STRONG><a name="[7c]"></a>reset_indication</STRONG> (ARM, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_init
</UL>
<HR></body></html>
